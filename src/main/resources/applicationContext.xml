<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Configuration des propriétés -->
    <context:property-placeholder location="classpath:application.properties"/>

    <!-- Activation des annotations -->
    <context:annotation-config/>

    <!-- Scan des composants -->
    <context:component-scan base-package="com.smartlogi"/>

    <!-- DataSource Configuration -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="maximumPoolSize" value="10"/>
        <property name="minimumIdle" value="5"/>
        <property name="connectionTimeout" value="30000"/>
    </bean>

    <!-- EntityManagerFactory Configuration -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.smartlogi.model"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="true"/>
                <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
                <prop key="hibernate.order_inserts">true</prop>
                <prop key="hibernate.order_updates">true</prop>
            </props>
        </property>
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Enable transaction annotations -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Repository Beans avec différents scopes -->
    <bean id="livreurRepository" class="com.smartlogi.repository.LivreurRepositoryImpl" scope="singleton"/>

    <bean id="colisRepository" class="com.smartlogi.repository.ColisRepositoryImpl" scope="prototype"/>


    <bean id="livreurService" class="com.smartlogi.service.LivreurServiceImpl">
        <constructor-arg ref="livreurRepository"/>
    </bean>

    <bean id="colisService" class="com.smartlogi.service.ColisServiceImpl">
        <constructor-arg ref="livreurRepository"/>
        <property name="colisRepository" ref="colisRepository"/>
    </bean>

</beans>